library(igraph)
nodes[,6] <- betweenness_cent$vector
source("~/Desktop/NS_Assignment_4/assignment.r")
betweenness(g)
betweenness(g)[which(betweenness(g)>0.8)]
nodes[,6] <- betweenness_cent
nodes[,6] <- betweenness_cent
nodes[,7] <- closeness_cent
colnames(nodes)[6:7] <- c("Betweenness","Closeness")
print(head(nodes,5))
print(nodes[,1][which(nodes$Betweenness > 300)])
print(nodes[,1][which(nodes$Closeness > 300)])
print(nodes[,1][which(nodes$Closeness > 0.5)])
print(nodes[,1][which(nodes$Closeness > 0.005)])
print(nodes[,1][which(nodes$Closeness > 0.006)])
clique_size_counts(g)
table(sapply(cliques(g),length))
clique_size_counts(g)
table(sapply(cliques(g),length)) # Maximum size is 6
cliques(g) [sapply(cliques(g), length) == 6]
# Q5
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
V(g2)$color <-  nodes[1:19,3]
plot(g2, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g2))
pilots <- data.frame(
id = c(1:4),
name = c("Hani Hanjour", "Mohamed Atta", "Marwan Al-Shehhi", "Ziad Jarrah"))
pilotw
pilots
V(g2)$shape <- ifelse(V(g2)$name.isin(pilots$name), "square", "circle")
V(g2)$shape <- ifelse(V(g2).name.isin(pilots.name), "square", "circle")
V(g2)['name'].isin(pilots['name'])
V(g2).isin(pilots)
V(g2).isin(pilots)
V(g2)$shape <- ifelse(any(V(g2)==pilots$name), "square", "circle")
V(g2)$shape <- ifelse(any(V(g2)==pilots$name[1]), "square", "circle")
plot(g2, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g2))
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
V(g2)$shape <- ifelse(any(V(g2)==pilots$name[,1]), "square", "circle")
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
V(g2)$shape <- ifelse(any(V(g2)==pilots[,1]), "square", "circle")
V(g2)$color <-  nodes[1:19,3]
plot(g2, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g2))
source("~/Desktop/NS_Assignment_4/assignment.r")
# Q5
pilots <- data.frame(
id = c(1:4),
name = c("Hani Hanjour", "Mohamed Atta", "Marwan Al-Shehhi", "Ziad Jarrah"))
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
for(v in V(g2)){
if(any(pilots==v$name)){
V(g2)$shape <- "square"
}
else{
V(g2)$shape <- "circle"
}
}
pilots <- data.frame(
id = c(1:4),
name = c("Hani Hanjour", "Mohamed Atta", "Marwan Al-Shehhi", "Ziad Jarrah"))
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
for(v in V(g2)){
if(any(pilots==v)){
V(g2)$shape <- "square"
}
else{
V(g2)$shape <- "circle"
}
}
V(g2)$color <-  nodes[1:19,3]
plot(g2, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g2))
pilots <- data.frame(
id = c(1:4),
name = c("Hani Hanjour", "Mohamed Atta", "Marwan Al-Shehhi", "Ziad Jarrah"))
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
for(v in V(g2)){
print(v)
if(any(pilots==v)){
V(g2)$shape <- "square"
}
else{
V(g2)$shape <- "circle"
}
}
V(g2)$color <-  nodes[1:19,3]
plot(g2, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g2))
pilots <- data.frame(
id = c(1:4),
name = c("Hani Hanjour", "Mohamed Atta", "Marwan Al-Shehhi", "Ziad Jarrah"))
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
for(v in V(g2)$name){
print(v)
if(any(pilots==v)){
V(g2)$shape <- "square"
}
else{
V(g2)$shape <- "circle"
}
}
V(g2)$color <-  nodes[1:19,3]
plot(g2, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g2))
pilots
pilots <- data.frame(
id = c(1:4),
name = c("Hani.Hanjour", "Mohamed.Atta", "Marwan.Al-Shehhi", "Ziad.Jarrah"))
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
for(v in V(g2)$name){
print(v)
if(any(pilots==v)){
V(g2)$shape <- "square"
}
else{
V(g2)$shape <- "circle"
}
}
V(g2)$color <-  nodes[1:19,3]
plot(g2, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g2))
pilots
pilots <- data.frame(
id = c(1:4),
name = c("Hani.Hanjour", "Mohamed.Atta", "Marwan.Al-Shehhi", "Ziad.Jarrah"))
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
for(v in V(g2)$name){
print(v)
if(any(pilots$name==v)){
V(g2)$shape <- "square"
}
else{
V(g2)$shape <- "circle"
}
}
V(g2)$color <-  nodes[1:19,3]
plot(g2, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g2))
pilots
pilots$name
# Q2
eigen_cent <- eigen_centrality(g)
nodes[,5] <- eigen_cent$vector
colnames(nodes)[5] <-c("EigenValue")
print(nodes[,1][which(nodes$EigenValue > .6)])
cliques(g) [sapply(cliques(g), length) == 6]
source("~/Desktop/NS_Assignment_4/assignment.r")
cliques(g) [sapply(cliques(g), length) == 6]
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
V(g2)$shape
source("~/Desktop/NS_Assignment_4/assignment.r")
temp
source("~/Desktop/NS_Assignment_4/assignment.r")
V(g2)$shape
V(g2)$shape<-temp
source("~/Desktop/NS_Assignment_4/assignment.r")
V(g2)$shape
V(g2)$shape<- rbind(V(g2)$shape,temp)
V(g2)$shape
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
V(g2)$shape
source("~/Desktop/NS_Assignment_4/assignment.r")
V(g2)$shape[10]<-"square"
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
print(v)
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
source("~/Desktop/NS_Assignment_4/assignment.r")
clique_size_counts(g2)
table(sapply(cliques(g2),length)) # Maximum size is 6
clique_size_counts(g2)
table(sapply(cliques(g2),length)) # Maximum size is 4
cliques(g2) [sapply(cliques(g2), length) == 4]
table(sapply(cliques(g2),length)) # Maximum size is 4
cliques(g2) [sapply(cliques(g2), length) == 4]
# Q1
V(g)$color <- "lightblue"
V(g)$color[1:19] <- "salmon"
plot(g, vertex.label=NA,vertex.size=8, layout=layout_with_dh(g))
plot(g, vertex.label=NA,vertex.size=8, layout=layout_with_gem(g))
eigen_cent <- eigen_centrality(g)
nodes[,5] <- eigen_cent$vector
colnames(nodes)[5] <-c("EigenValue")
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in nodes[,1][which(nodes$EigenValue > .6)]){
if(any(g2$name==v)){
print(v)
}
else{
break
}
i<-i+1
}
eigen_cent <- eigen_centrality(g)
nodes[,5] <- eigen_cent$vector
colnames(nodes)[5] <-c("EigenValue")
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in nodes[,1][which(nodes$EigenValue > .6)]){
if(any(g2$name==v$name)){
print(v)
}
else{
break
}
i<-i+1
}
eigen_cent <- eigen_centrality(g)
nodes[,5] <- eigen_cent$vector
colnames(nodes)[5] <-c("EigenValue")
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in nodes[,1][which(nodes$EigenValue > .6)]){
if(any(V(g2)$name==v)){
print(v)
}
else{
break
}
i<-i+1
}
source("~/Desktop/NS_Assignment_4/assignment.r")
eigen_cent <- eigen_centrality(g)
nodes[,5] <- eigen_cent$vector
colnames(nodes)[5] <-c("EigenValue")
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in nodes[,1][which(nodes$EigenValue > .6)]){
if(any(V(g2)$name==v)){
print(v)
}
else{
print("Fuck")
}
i<-i+1
}
eigen_cent <- eigen_centrality(g)
nodes[,5] <- eigen_cent$vector
colnames(nodes)[5] <-c("EigenValue")
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in nodes[,1][which(nodes$EigenValue > .6)]){
print(v)
if(any(V(g2)$name==v)){
}
else{
print("Fuck")
}
i<-i+1
}
print(nodes[,1][which(nodes$EigenValue > .6)])
betweenness_cent <- betweenness(g)
closeness_cent <- closeness(g)
nodes[,6] <- betweenness_cent
nodes[,7] <- closeness_cent
colnames(nodes)[6:7] <- c("Betweenness","Closeness")
print(nodes[,1][which(nodes$Betweenness > 300)])
print(nodes[,1][which(nodes$Closeness > 0.006)])
table(sapply(cliques(g),length)) # Maximum size is 6
cliques(g) [sapply(cliques(g), length) == 6]
cliques(g)
cliques(g) [sapply(cliques(g), length) == 6]
clique_size_counts(g)
cliq<-cliques(g) [sapply(cliques(g), length) == 6]
# Q4(b)
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in cliq){
if(any(pilots$name==v)){
print(v)
}
else{
break
}
i<-i+1
}
cliq<-cliques(g) [sapply(cliques(g), length) == 6]
# Q4(b)
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in cliq){
print(v)
if(any(pilots$name==v)){
}
else{
break
}
i<-i+1
}
i<-1
for(v in cliq$name){
print(v)
if(any(pilots$name==v)){
}
else{
break
}
i<-i+1
}
i<-1
for(v in cliq){
print(v[i])
if(any(pilots$name==v)){
}
else{
break
}
i<-i+1
}
# Q4(b)
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in cliq){
print(v[i])
if(any(pilots$name==v[i])){
}
else{
break
}
i<-i+1
}
cliq<-cliques(g) [sapply(cliques(g), length) == 6]
# Q4(b)
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(v in cliq){
if(any(pilots$name==v[i])){
print(v[i])
}
i<-i+1
}
i<-1
for(i in 1:6){
if(any(pilots$name==v[i])){
print(v[i])
}
}
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(i in 1:6){
if(any(pilots$name==cliq[i])){
print(cliq[i])
}
}
i<-1
for(i in 1:6){
print(i)
if(any(pilots$name==cliq[i])){
print(cliq[i])
}
}
for(i in 1:6){
print(cliq[i])
if(any(pilots$name==cliq[i])){
print(cliq[i])
}
}
cliq[1]
cliq[1][1]
cliq$name
cliq[1,]
cliq[2]
cliq<-cliques(g) [sapply(cliques(g), length) == 6]
cliq[1]
# Q4(b)
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
i<-1
for(c in cliq){
print(c[i])
if(any(pilots$name==c[i])){
print(c[i])
}
}
i<-1
for(c in cliq){
for(i in 1:6){
print(c[i])
if(any(pilots$name==c[i])){
print(c[i])
}
}
}
i<-1
for(c in cliq){
for(i in 1:6){
if(any(pilots$name==c[i])){
print(c[i])
}
}
}
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
pilots <- data.frame(
id = c(1:4),
name = c("Hani.Hanjour", "Mohamed.Atta", "Marwan.Al.Shehhi", "Ziad.Jarrah"))
i<-1
for(c in cliq){
for(i in 1:6){
if(any(pilots$name==c[i])){
print(c[i])
}
}
}
# Q4(b)
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
pilots <- data.frame(
id = c(1:4),
name = c("Hani.Hanjour", "Mohamed.Atta", "Marwan.Al.Shehhi", "Ziad.Jarrah"))
i<-1
for(c in cliq){
for(i in 1:6){
if(any(pilots$name==c[i])){
}
print(c[i])
}
}
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
pilots <- data.frame(
id = c(1:4),
name = c("Hani.Hanjour", "Mohamed.Atta", "Marwan.Al.Shehhi", "Ziad.Jarrah"))
i<-1
for(c in cliq[1]){
for(i in 1:6){
if(any(pilots$name==c[i])){
}
print(c[i])
}
}
cliq<-cliques(g) [sapply(cliques(g), length) == 6]
cliq[1]
# Q4(b)
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
pilots <- data.frame(
id = c(1:4),
name = c("Hani.Hanjour", "Mohamed.Atta", "Marwan.Al.Shehhi", "Ziad.Jarrah"))
i<-1
for(c in cliq[1]){
for(i in 1:6){
if(any(pilots$name==c[i])){
print(c[i])
}
}
}
# Q4(b)
g2 <- graph_from_adjacency_matrix(adj[1:19,1:19], mode = "undirected")
pilots <- data.frame(
id = c(1:4),
name = c("Hani.Hanjour", "Mohamed.Atta", "Marwan.Al.Shehhi", "Ziad.Jarrah"))
i<-1
for(c in cliq[1]){
for(i in 1:6){
if(any(pilots$name==c)){
print(c)
}
}
}
cliq
cliq[1]
cliq[6]
cliq[1]
cliq[1][2]
cliq[1][1]
cliq[1][1][1]
table(sapply(cliques(g2),length)) # Maximum size is 4
cliques(g2) [sapply(cliques(g2), length) == 4]
